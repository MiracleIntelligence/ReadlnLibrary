<Page
    x:Class="ReadlnLibrary.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:ReadlnLibrary.Converters"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ex="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rdlnControls="using:ReadlnLibrary.Controls"
    xmlns:wuxdata="using:Windows.UI.Xaml.Data"
    RequestedTheme="Dark"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">
    <Page.Resources>
        <Thickness x:Key="GridViewItemRevealBorderThemeThickness">0</Thickness>
        <Style x:Key="FlyoutButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="150" />
            <Setter Property="Margin" Value="5" />
        </Style>
        <converters:NegateBoolToVisibilityConverter x:Key="NegateBoolToVisibilityConverter" />
        <converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
        <Flyout x:Key="DocFlyout" x:Name="DocFlyout">
            <StackPanel>
                <Button
                    x:Uid="ButtonEdit"
                    Click="DocFlyoutButtonClick"
                    Command="{x:Bind ViewModel.EditDocCommand}"
                    CommandParameter="{Binding}"
                    Content="Edit"
                    Style="{StaticResource FlyoutButtonStyle}" />
                <Button
                    x:Uid="ButtonRemove"
                    Click="DocFlyoutButtonClick"
                    Command="{x:Bind ViewModel.RemoveDocCommand}"
                    CommandParameter="{Binding}"
                    Content="Remove"
                    Style="{StaticResource FlyoutButtonStyle}" />
            </StackPanel>
        </Flyout>
        <DataTemplate x:Key="DocTemplate">
            <Button
                Margin="2"
                Click="Button_Click"
                ContextFlyout="{StaticResource DocFlyout}"
                Style="{StaticResource ButtonRevealStyle}">
                <Grid Width="220">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid
                        Grid.Column="0"
                        Width="40"
                        Height="40"
                        Margin="5">
                        <Image
                            Width="30"
                            Height="30"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Loaded="OnImageThumbnailLoaded"
                            Source="/Images/book-icon.png" />
                    </Grid>
                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <TextBlock FontWeight="SemiBold" Text="{Binding Title}" />
                        <TextBlock>
                            <Run Text="by" />
                            <Run Text="{Binding Author}" />
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Button>
        </DataTemplate>
        <CollectionViewSource
            x:Key="CVSDocs"
            x:Name="CVSDocs"
            IsSourceGrouped="True"
            Source="{x:Bind ViewModel.GroupedDocuments, Mode=OneWay}" />
        <DataTemplate x:Key="ZoomedOutTemplate" x:DataType="wuxdata:ICollectionViewGroup">
            <TextBlock
                Width="170"
                Margin="5"
                Style="{StaticResource SubtitleTextBlockStyle}"
                Text="{Binding Group.Key}"
                TextAlignment="Center"
                TextWrapping="NoWrap" />
        </DataTemplate>
    </Page.Resources>
    <Page.TopAppBar>
        <CommandBar x:Name="CommandBarTop">
            <AppBarToggleButton
                Command="{x:Bind ViewModel.AddFileCommand}"
                Icon="Add"
                Label="Add" />
            <CommandBar.SecondaryCommands>
                <AppBarButton
                    Command="{x:Bind ViewModel.SetGroupCommand}"
                    CommandParameter="Title"
                    Label="Order by Title" />
                <AppBarButton
                    Command="{x:Bind ViewModel.SetGroupCommand}"
                    CommandParameter="Category"
                    Label="Order by Category" />
                <AppBarButton
                    Command="{x:Bind ViewModel.SetGroupCommand}"
                    CommandParameter="Author"
                    Label="Order by Author" />
            </CommandBar.SecondaryCommands>
            <CommandBar.Content>
                <StackPanel Orientation="Horizontal">
                    <AppBarButton
                        Command="{x:Bind ViewModel.SettingsCommand}"
                        Icon="Setting"
                        IsCompact="{Binding IsOpen, ElementName=CommandBarTop, Converter={StaticResource BoolNegationConverter}}"
                        Label="Settings" />
                    <controls:TokenizingTextBox
                        x:Name="TokenBox"
                        MinWidth="250"
                        Margin="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        ItemsSource="{x:Bind ViewModel.Tokens}"
                        PlaceholderText="Category"
                        QueryIcon="{ex:SymbolIconSource Symbol=Filter}"
                        SuggestedItemsSource="{x:Bind ViewModel.Categories}"
                        TextMemberPath="Text"
                        TokenDelimiter=",">
                        <controls:TokenizingTextBox.SuggestedItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <!--<SymbolIcon Symbol="{Binding Icon}" />-->
                                    <TextBlock Padding="4,0,0,0" Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </controls:TokenizingTextBox.SuggestedItemTemplate>
                        <controls:TokenizingTextBox.TokenItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <!--<SymbolIcon Symbol="{Binding Icon}" />-->
                                    <TextBlock Padding="4,0,0,0" Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </controls:TokenizingTextBox.TokenItemTemplate>
                    </controls:TokenizingTextBox>
                    <!--<TextBlock Margin="0,4,0,0">
                            <Run>Current Edit:</Run>
                            <Run Text="{Binding Text, ElementName=TokenBox}" />
                        </TextBlock>
                        <ItemsControl ItemsSource="{Binding ItemsSource, ElementName=TokenBox}" />-->
                </StackPanel>
            </CommandBar.Content>
        </CommandBar>
    </Page.TopAppBar>
    <Grid
        x:Name="ContentArea"
        x:Uid="ContentArea"
        Margin="{StaticResource MediumLeftRightMargin}"
        AllowDrop="True"
        DragOver="DefaultScreen_DragOver"
        Drop="DefaultScreen_Drop">
        <Grid
            x:Name="FirstScreen"
            x:Load="{x:Bind ViewModel.LibraryIsEmpty, Mode=OneWay}"
            Background="Black">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Tapped">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.AddFileCommand}" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <Grid Margin="120,130,120,30" Opacity="0.5">
                <rdlnControls:ImageBookControl />
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel>
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="36"
                        Text="Tap to add documents" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        FontSize="16"
                        Text="We will organize them for you" />
                </StackPanel>
                <Grid
                    Grid.Row="1"
                    Margin="140,140,140,10"
                    VerticalAlignment="Bottom"
                    Opacity="0.2">
                    <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                        <rdlnControls:ImageLogoControl />
                    </Viewbox>
                </Grid>
            </Grid>
        </Grid>
        <Grid
            x:Name="DefaultScreen"
            Margin="15"
            Visibility="{x:Bind ViewModel.LibraryIsEmpty, Mode=OneWay, Converter={StaticResource NegateBoolToVisibilityConverter}}">
            <SemanticZoom>
                <SemanticZoom.ZoomedInView>
                    <!--  Put the GridView for the zoomed in view here.  -->
                    <GridView
                        x:Name="DocumentsListView"
                        CanDragItems="True"
                        ItemTemplate="{StaticResource DocTemplate}"
                        ItemsSource="{Binding Source={StaticResource CVSDocs}}">
                        <GridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem">
                                <Setter Property="BorderThickness" Value="0" />
                            </Style>
                        </GridView.ItemContainerStyle>
                        <GridView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Key}" />
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </GridView.GroupStyle>
                    </GridView>
                </SemanticZoom.ZoomedInView>

                <SemanticZoom.ZoomedOutView>
                    <GridView
                        Name="HeadersListView"
                        ItemTemplate="{StaticResource ZoomedOutTemplate}"
                        ItemsSource="{x:Bind CVSDocs.View.CollectionGroups, Mode=OneWay}"
                        SelectionMode="None" />
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>

            <!--<controls:ItemsRepeater HorizontalAlignment="Stretch"
                                    x:Name="List"
                                    DataContext="{x:Bind ViewModel}"
                                    MinWidth="200"
                                    ItemsSource="{x:Bind ViewModel.Documents, Mode=OneWay}"
                                    ItemTemplate="{StaticResource DocTemplate}">
                    <controls:ItemsRepeater.Layout>
                        <controls:UniformGridLayout Orientation="Vertical"/>
                    </controls:ItemsRepeater.Layout>
                </controls:ItemsRepeater>-->
        </Grid>
    </Grid>
</Page>
