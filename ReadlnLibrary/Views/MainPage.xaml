<Page
    x:Class="ReadlnLibrary.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:wuxdata="using:Windows.UI.Xaml.Data"
    xmlns:rdlnControls="using:ReadlnLibrary.Controls"
    xmlns:converters="using:ReadlnLibrary.Converters"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    Style="{StaticResource PageStyle}"
    RequestedTheme="Dark"
    mc:Ignorable="d">
    <Page.Resources>
        <Thickness x:Key="GridViewItemRevealBorderThemeThickness">0</Thickness>
        <Style x:Key="FlyoutButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <converters:NegateBoolToVisibilityConverter x:Key="NegateBoolToVisibilityConverter"/>
        <converters1:BoolNegationConverter x:Key="BoolNegationConverter"/>
        <Flyout x:Key="DocFlyout"
                x:Name="DocFlyout">
            <StackPanel>
                <Button
                    x:Uid="ButtonEdit"
                    Content="Edit"
                    Style="{StaticResource FlyoutButtonStyle}"
                    Click="DocFlyoutButtonClick"
                    Command="{x:Bind ViewModel.EditDocCommand}"
                    CommandParameter="{Binding}"/>
                <Button
                    x:Uid="ButtonRemove"
                    Content="Remove"
                    Style="{StaticResource FlyoutButtonStyle}"
                    Click="DocFlyoutButtonClick"
                    Command="{x:Bind ViewModel.RemoveDocCommand}"
                    CommandParameter="{Binding}"/>
            </StackPanel>
        </Flyout>
        <DataTemplate x:Key="DocTemplate">
            <Button Style="{StaticResource ButtonRevealStyle}" Margin="2"
                    ContextFlyout="{StaticResource DocFlyout}" Click="Button_Click">
                <Grid Width="220">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0"
                                      Width="40"
                                      Height="40"
                                      Margin="5">
                        <Image Width="30" Height="30"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Loaded="OnImageThumbnailLoaded" Source="/Images/book-icon.png"/>
                    </Grid>
                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <TextBlock Text="{Binding Title}" FontWeight="SemiBold" />
                        <TextBlock>
                                <Run Text="by"/>
                                <Run Text="{Binding Author}"/>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Button>
        </DataTemplate>
        <CollectionViewSource x:Key="CVSDocs"
                              x:Name="CVSDocs"
                              Source="{x:Bind ViewModel.GroupedDocuments, Mode=OneWay}"
                              IsSourceGrouped="True"/>
        <DataTemplate x:Key="ZoomedOutTemplate" x:DataType="wuxdata:ICollectionViewGroup">
            <TextBlock Text="{Binding Group.Key}"
                       Width="170"
                       Margin="5"
                       TextAlignment="Center"
                       Style="{StaticResource SubtitleTextBlockStyle}"
                       TextWrapping="NoWrap"/>
        </DataTemplate>
    </Page.Resources>
    <Page.TopAppBar>
        <CommandBar x:Name="CommandBarTop">
            <AppBarToggleButton Icon="Add" Label="Add" Command="{x:Bind ViewModel.AddFileCommand}"/>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Order by Title"
                              Command="{x:Bind ViewModel.SetGroupCommand}"
                              CommandParameter="Title"
                              />
                <AppBarButton Label="Order by Category"
                              Command="{x:Bind ViewModel.SetGroupCommand}"
                              CommandParameter="Category"
                              />
                <AppBarButton Label="Order by Author"
                              Command="{x:Bind ViewModel.SetGroupCommand}"
                              CommandParameter="Author"
                              />
            </CommandBar.SecondaryCommands>
            <CommandBar.Content>
                <AppBarButton Icon="Setting" Label="Settings" IsCompact="{Binding IsOpen, ElementName=CommandBarTop, Converter={StaticResource BoolNegationConverter}}" Command="{x:Bind ViewModel.SettingsCommand}"/>
            </CommandBar.Content>
        </CommandBar>
    </Page.TopAppBar>
    <Grid x:Uid="ContentArea" x:Name="ContentArea"          
              AllowDrop="True"
              DragOver="DefaultScreen_DragOver"
              Drop="DefaultScreen_Drop"
          Margin="{StaticResource MediumLeftRightMargin}">
        <Grid x:Name="FirstScreen"
              x:Load="{x:Bind ViewModel.LibraryIsEmpty, Mode=OneWay}"
              Background="Black">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Tapped">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.AddFileCommand}"/>
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <Grid Margin="120,130,120,30" Opacity="0.5">
                <rdlnControls:ImageBookControl/>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel>
                    <TextBlock Text="Tap to add documents"
                           HorizontalAlignment="Center" FontSize="36"/>
                    <TextBlock Text="We will organize them for you"
                               HorizontalAlignment="Center"
                               FontSize="16"/>
                </StackPanel>
                <Grid Grid.Row="1"
                      Opacity="0.2"
                      VerticalAlignment="Bottom"
                      Margin="140,140,140,10">
                    <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                        <rdlnControls:ImageLogoControl/>
                    </Viewbox>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="DefaultScreen"
              Visibility="{x:Bind ViewModel.LibraryIsEmpty, Mode=OneWay, Converter={StaticResource NegateBoolToVisibilityConverter}}"
              Margin="15">
            <SemanticZoom>
                <SemanticZoom.ZoomedInView>
                    <!-- Put the GridView for the zoomed in view here. -->
                    <GridView x:Name="DocumentsListView"
                              CanDragItems="True"
                                  ItemsSource="{Binding Source={StaticResource CVSDocs}}"
                                  ItemTemplate="{StaticResource DocTemplate}">
                        <GridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem">
                                <Setter Property="BorderThickness" Value="0"/>
                            </Style>
                        </GridView.ItemContainerStyle>
                        <GridView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Key}" />
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </GridView.GroupStyle>
                    </GridView>
                </SemanticZoom.ZoomedInView>

                <SemanticZoom.ZoomedOutView>
                    <GridView Name="HeadersListView"
                                  ItemsSource="{x:Bind CVSDocs.View.CollectionGroups, Mode=OneWay}"
                                  SelectionMode="None"
                              
                                  ItemTemplate="{StaticResource ZoomedOutTemplate}" />
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>

            <!--<controls:ItemsRepeater HorizontalAlignment="Stretch"
                                    x:Name="List"
                                    DataContext="{x:Bind ViewModel}"
                                    MinWidth="200"
                                    ItemsSource="{x:Bind ViewModel.Documents, Mode=OneWay}"
                                    ItemTemplate="{StaticResource DocTemplate}">
                    <controls:ItemsRepeater.Layout>
                        <controls:UniformGridLayout Orientation="Vertical"/>
                    </controls:ItemsRepeater.Layout>
                </controls:ItemsRepeater>-->
        </Grid>
    </Grid>
</Page>
